@model AgenciaDeToursRD.Models.Pais

@{
    ViewData["Title"] = "Editar País";
    Layout = "_Layout";
}

<div class="container py-4">
    <div class="card shadow border-0 rounded-4">
        <div class="card-header bg-warning text-dark d-flex justify-content-between align-items-center">
            <h4 class="mb-0">
                <i class="bi bi-pencil-square me-2"></i>Editar País
            </h4>
            <a asp-action="Index" class="btn btn-light btn-sm">
                <i class="bi bi-arrow-left"></i> Volver al listado
            </a>
        </div>

        <div class="card-body">
            <form asp-action="Edit" enctype="multipart/form-data" class="needs-validation" novalidate>
                <input type="hidden" asp-for="ID" />

                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                <div class="mb-3">
                    <label asp-for="Nombre" class="form-label fw-bold"></label>
                    <input asp-for="Nombre" class="form-control" />
                    <span asp-validation-for="Nombre" class="text-danger small"></span>
                </div>

                <div class="mb-4">
                    <label for="BanderaFile" class="form-label fw-bold">Bandera (JPG o PNG)</label>
                    <input type="file" name="BanderaFile" class="form-control" accept=".jpg,.jpeg,.png" />
                    @if (!string.IsNullOrEmpty(Model.Bandera))
                    {
                        <div class="mt-2">
                            <strong>Bandera actual:</strong><br />
                            <img src="@Model.Bandera" alt="Bandera actual" style="max-height: 100px;" class="img-thumbnail mt-2" />
                        </div>
                    }
                    <span asp-validation-for="Bandera" class="text-danger small"></span>
                </div>

                <hr />
                <h5 class="text-secondary mb-3">
                    <i class="bi bi-geo-alt-fill me-2"></i>Destinos
                </h5>

                <div class="table-responsive mb-3">
                    <table class="table align-middle table-bordered" id="destinosTable">
                        <thead class="table-light">
                            <tr>
                                <th>Nombre</th>
                                <th>Duración</th>
                                <th>Imagen</th>
                                <th style="width: 50px;"></th>
                            </tr>
                        </thead>
                        <tbody id="destinosBody">
                            @if (Model.Destinos != null)
                            {
                                var destinosList = Model.Destinos.ToList();
                                for (int i = 0; i < destinosList.Count; i++)
                                {
                                    var destino = destinosList[i];
                                    var viewData = new ViewDataDictionary(ViewData) { { "index", i } };
                                    @await Html.PartialAsync("_DestinoEditForm", destino, viewData)
                                }
                            }
                        </tbody>
                    </table>
                </div>

                <div class="mb-4">
                    <button type="button" class="btn btn-outline-secondary" onclick="addDestino()">
                        <i class="bi bi-plus-circle me-1"></i> Agregar Destino
                    </button>
                </div>

                <div class="d-flex justify-content-end">
                    <button type="submit" class="btn btn-primary me-2">
                        <i class="bi bi-save me-1"></i> Guardar Cambios
                    </button>
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        Cancelar
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        let destinoIndex = @Model.Destinos?.Count() ?? 0;

        function addDestino() {
            const paisId = @Model.ID;
            const template = `
                        <tr>
                            <td>
                                <input type="hidden" name="Destinos[${destinoIndex}].ID" value="0" />
                                <input type="hidden" name="Destinos[${destinoIndex}].PaisId" value="${paisId}" />
                                <input name="Destinos[${destinoIndex}].Nombre" class="form-control" />
                                <span class="text-danger field-validation-valid small" data-valmsg-for="Destinos[${destinoIndex}].Nombre" data-valmsg-replace="true"></span>
                            </td>
                            <td>
                                <input name="Destinos[${destinoIndex}].DuracionTexto" class="form-control" />
                                <span class="text-danger field-validation-valid small" data-valmsg-for="Destinos[${destinoIndex}].DuracionTexto" data-valmsg-replace="true"></span>
                            </td>
                            <td>
                                <input type="file" name="Destinos[${destinoIndex}].DestinoFile" class="form-control" accept=".jpg,.jpeg,.png" />
                                <span class="text-danger field-validation-valid small" data-valmsg-for="Destinos[${destinoIndex}].DestinoFile" data-valmsg-replace="true"></span>
                            </td>
                            <td class="text-center">
                                <button type="button" class="btn btn-outline-danger btn-sm" onclick="removeDestino(this)">
                                    <i class="bi bi-x-lg"></i>
                                </button>
                            </td>
                        </tr>
                    `;
            document.getElementById("destinosBody").insertAdjacentHTML("beforeend", template);
            destinoIndex++;
        }

        function removeDestino(button) {
            button.closest("tr").remove();
        }
    </script>
}
